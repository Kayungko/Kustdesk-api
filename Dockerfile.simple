FROM golang:1.23-alpine AS builder

# 设置工作目录
WORKDIR /app

# 安装必要的工具
RUN apk add --no-cache tzdata ca-certificates git gcc musl-dev

# 复制Go模块文件
COPY go.mod go.sum ./

# 下载依赖
RUN go mod download

# 复制源码
COPY . .

# 生成Swagger文档
RUN go install github.com/swaggo/swag/cmd/swag@latest
RUN swag init -g cmd/apimain.go --output docs/api --instanceName api --exclude http/controller/admin
RUN swag init -g cmd/apimain.go --output docs/admin --instanceName admin --exclude http/controller/api

# 构建应用
RUN CGO_ENABLED=1 GOOS=linux go build -a -ldflags "-s -w" -o apimain cmd/apimain.go

# 最终镜像
FROM alpine:latest

# 设置工作目录
WORKDIR /app

# 安装必要的工具
RUN apk add --no-cache tzdata ca-certificates

# 复制构建结果
COPY --from=builder /app/apimain /app/
COPY --from=builder /app/conf /app/conf/
COPY --from=builder /app/resources /app/resources/
COPY --from=builder /app/docs /app/docs/

# 创建必要的目录
RUN mkdir -p /app/data /app/runtime

# 设置权限
RUN chmod +x /app/apimain

# 暴露端口
EXPOSE 21114

# 设置数据卷
VOLUME /app/data

# 启动命令
CMD ["./apimain"]
